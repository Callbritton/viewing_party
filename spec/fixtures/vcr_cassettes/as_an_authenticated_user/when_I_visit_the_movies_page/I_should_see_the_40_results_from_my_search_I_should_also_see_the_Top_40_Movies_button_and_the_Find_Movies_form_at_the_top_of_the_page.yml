---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<MOVIE_API_KEY>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 08 Dec 2020 23:37:18 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 0dfe6f02dbba7c39906cae47653ae6b3.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - "-OtlEFKeOuJPvIZ36WAi2VV34oEe8yp5g8GbVP6GpdKhDd5pLENA_g=="
      Age:
      - '6546'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 09 Dec 2020 01:26:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<MOVIE_API_KEY>&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 08 Dec 2020 23:37:18 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 48a6ccbb0ddb052ab512a3422295bd39.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - AeFyWPes3hpnNh_OBl8C9WInEq-t3dFisEPocG9Gh589JYIZ7xzahQ==
      Age:
      - '6546'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 09 Dec 2020 01:26:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_API_KEY>&include_adult=false&language=en-US&page=1&query=Interstellar
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 09 Dec 2020 01:24:32 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 4d0ecb5905192435c3fd204705c9fc24.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - V6-eXvWOFQyymjdH21uLQEEyKuhZfHzQf7QDU29q1sPblLfMsXBuFQ==
      Age:
      - '112'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIveEpIb2tNYmxqdmpBRFlkaXQ1Zks1VlFzWEVHLmpwZyIsImdlbnJlX2lkcyI6WzEyLDE4LDg3OF0sImlkIjoxNTczMzYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkludGVyc3RlbGxhciIsIm92ZXJ2aWV3IjoiVGhlIGFkdmVudHVyZXMgb2YgYSBncm91cCBvZiBleHBsb3JlcnMgd2hvIG1ha2UgdXNlIG9mIGEgbmV3bHkgZGlzY292ZXJlZCB3b3JtaG9sZSB0byBzdXJwYXNzIHRoZSBsaW1pdGF0aW9ucyBvbiBodW1hbiBzcGFjZSB0cmF2ZWwgYW5kIGNvbnF1ZXIgdGhlIHZhc3QgZGlzdGFuY2VzIGludm9sdmVkIGluIGFuIGludGVyc3RlbGxhciB2b3lhZ2UuIiwicG9wdWxhcml0eSI6OTYuNjgyLCJwb3N0ZXJfcGF0aCI6Ii9nRVUyUW5pRTZFNzdOSTZsQ1U2TXhsTkJ2SXguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNC0xMS0wNSIsInRpdGxlIjoiSW50ZXJzdGVsbGFyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguMywidm90ZV9jb3VudCI6MjQzODF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlszNV0sImlkIjoyODc5NTQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkxvbGl0YSBmcm9tIEludGVyc3RlbGxhciBTcGFjZSIsIm92ZXJ2aWV3IjoiQW4gdW5kZW5pYWJseSBiZWF1dGlmdWwgYWxpZW4gaXMgc2VudCB0byBFYXJ0aCB0byBzdHVkeSB0aGUgY29tcGxleCBtYXRpbmcgcml0dWFscyBvZiBodW1hbiBiZWluZ3MsIHdoaWNoIGxlYWRzIHRvIHRoZSB5b3VuZyBpbnRlcnN0ZWxsYXIgdHJhdmVsZXIgZXhwZXJpZW5jaW5nIHRoZSBwYXNzaW9uIHRoYXQgc3Vycm91bmRzIHRoZSBjZW50dXJpZXMtb2xkIHJpdHVhbCBvZiB0aGUgc3BlY2llcy4iLCJwb3B1bGFyaXR5IjoxNS4wMzUsInBvc3Rlcl9wYXRoIjoiL25oV2xpcDFzNVl6aFJGS0dsSEFCR0pyQmhabi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE0LTAzLTA4IiwidGl0bGUiOiJMb2xpdGEgZnJvbSBJbnRlcnN0ZWxsYXIgU3BhY2UiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni44LCJ2b3RlX2NvdW50Ijo0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTldLCJpZCI6MzAxOTU5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJJbnRlcnN0ZWxsYXI6IE5vbGFuJ3MgT2R5c3NleSIsIm92ZXJ2aWV3IjoiQSBsb29rIGJlaGluZCB0aGUgbGVucyBvZiBDaHJpc3RvcGhlciBOb2xhbidzIHNwYWNlIGVwaWMuIiwicG9wdWxhcml0eSI6OS4wMTIsInBvc3Rlcl9wYXRoIjoiL3dVbXlFanJMcVlwSllqVk1EMllSN0lmZkZlRS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE0LTExLTA1IiwidGl0bGUiOiJJbnRlcnN0ZWxsYXI6IE5vbGFuJ3MgT2R5c3NleSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjcsInZvdGVfY291bnQiOjE1MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvd1VaSUQzV3pyenVJUW1jSWpYYWhaa1YxSXRJLmpwZyIsImdlbnJlX2lkcyI6Wzg3OF0sImlkIjozOTgxODgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkludGVyc3RlbGxhciBXYXJzIiwib3ZlcnZpZXciOiJGb3IgTWlsbGVubmlhIHRoZSBBbGlpZW4gZm9yY2UgaGFzIHdhdGNoZWQgYW5kIHdhaXRlZCwgYSBicm9vZGluZyBtZW5hY2UgdGhhdCBoYXMgbm93IGF0IGxhc3QgZGVjaWRlZCB0byB0YWtlIG92ZXIgdGhlIEVhcnRoLiBDb21tdW5pY2F0aW9ucyBzeXN0ZW1zIHdvcmxkd2lkZSBhcmUgc2VudCBpbnRvIGNoYW9zIGJ5IGEgc3RyYW5nZSBhdG1vc3BoZXJpYyBpbnRlcmZlcmVuY2UgYW5kIHRoaXMgaGFzIHR1cm5lZCBpbnRvIGEgZ2xvYmFsIHBoZW5vbWVub24uIEEgbWFzc2l2ZSBzcGFjZXNoaXAgaGVhZGVkIHRvd2FyZHMgRWFydGggYW5kIHNtYWxsZXIgc3BhY2VzaGlwcyBiZWdhbiB0byBjb3ZlciBlbnRpcmUgY2l0aWVzIGFyb3VuZCB0aGUgd29ybGQuIFN1ZGRlbmx5LCB0aGUgd29uZGVyIHR1cm5zIGludG8gaG9ycm9yIGFzIHRoZSBzcGFjZXNoaXBzIGRlc3Ryb3kgdGhlIGNpdGllcyB3aXRoIGVuZXJneSB3ZWFwb25zLiBXaGVuIHRoZSB3b3JsZCBjb3VudGVyYXR0YWNrcywgdGhlIGFsaWVuIHNoaXBzIGFyZSBpbnZpbmNpYmxlIHRvIG1pbGl0YXJ5IHdlYXBvbnMuICBUaGUgc3Vydml2b3JzIGhhdmUgdG8gdXNlIHRoZWlyIHdpdHMgdG8ga2lsbCB0aGUgYWxpZW5zLCBvciBkaWUuIiwicG9wdWxhcml0eSI6NS45NjksInBvc3Rlcl9wYXRoIjoiLzR1V1o4Y2RyWE1MaXlMTmdkbXFRQ0lNNno0MC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTA2LTA5IiwidGl0bGUiOiJJbnRlcnN0ZWxsYXIgV2FycyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjozLjQsInZvdGVfY291bnQiOjl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOls5OV0sImlkIjo1MjkxMDcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ikluc2lkZSBJbnRlcnN0ZWxsYXIiLCJvdmVydmlldyI6IkNhc3QgYW5kIGNyZXcgb2YgQ2hyaXN0b3BoZXIgTm9sYW4ncyAnSW50ZXJzdGVsbGFyJyBkaXNjdXNzIHByb2plY3Qgb3JpZ2lucywgdGhlIGZpbG0ncyBpbWFnZXJ5LCBhbWJpdGlvbnMsIGluY29ycG9yYXRpbmcgSU1BWCBmb290YWdlLCB0aGUgaHVtYW4gZWxlbWVudCB3aXRoaW4gdGhlIGZpbG0sIGFybSBzaG9vdGluZyBsb2NhdGlvbnMgb3V0c2lkZSBvZiBDYWxnYXJ5LCB0aGUgc2V0IGNvbnN0cnVjdGlvbiBhbmQgZGVzaWduLCB3b3JraW5nIHdpdGggcmVhbCBjb3JuLCBtZWNoYW5pY2FsIGNoYXJhY3RlcnMsIGluY2x1ZGluZyBiYWNrc3RvcnksIGRlc2lnbiwgdGhlIGJsZW5kIG9mIHByYWN0aWNhbCBhbmQgZGlnaXRhbCBlZmZlY3RzIGluIGJyaW5naW5nIHRoZW0gdG8gbGlmZSwgdGhlIGRpZmZlcmVuY2VzIGluIHRoZSBjaGFyYWN0ZXJzLCB0aGUgaHVtYW4gcGVyZm9ybWFuY2VzIGJlaGluZCB0aGUgY2hhcmFjdGVycywgdGhlIGNyZWF0aXZlIHByb2Nlc3MgYmVoaW5kIHRoZSBmaWxtJ3MgbXVzaWMsIEljZWxhbmRpYyBsb2NhdGlvbnMsIHZlaGljbGUgaW50ZXJpb3JzLCB0aGUgcHJvY2Vzc2VzIG9mIHNpbXVsYXRpbmcgdGhlIGFic2VuY2Ugb2YgZ3Jhdml0eSwgdGhlIGNydWNpYWwgZW5kLWZpbG0gdmlzdWFscyBhbmQgaW5mbHVlbmNlIGFuZCBpbnNwaXJhdGlvbiBmb3IgZnV0dXJlIGdlbmVyYXRpb25zIiwicG9wdWxhcml0eSI6NS4yOTYsInBvc3Rlcl9wYXRoIjoiL3ZlbUJwbFBLUWhWZTVjUldMN2t4dGdwMTVWcS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE1LTAzLTMxIiwidGl0bGUiOiJJbnNpZGUgSW50ZXJzdGVsbGFyIiwidmlkZW8iOnRydWUsInZvdGVfYXZlcmFnZSI6Ny44LCJ2b3RlX2NvdW50Ijo0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii96alptWHl1Z3lwSjhhRGMyV2R5YnVHOWNtb2guanBnIiwiZ2VucmVfaWRzIjpbOTldLCJpZCI6MzM2NTkyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgU2NpZW5jZSBvZiBJbnRlcnN0ZWxsYXIiLCJvdmVydmlldyI6IlRoZSBzY2llbmNlIG9mIENocmlzdG9waGVyIE5vbGFuJ3Mgc2NpLWZpLCBJbnRlcnN0ZWxsYXIuIiwicG9wdWxhcml0eSI6NC41MDIsInBvc3Rlcl9wYXRoIjoiL2l0WHRrWjdGc0VhMng3bzdUR1hIajNqYXZwMS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE0LTExLTI1IiwidGl0bGUiOiJUaGUgU2NpZW5jZSBvZiBJbnRlcnN0ZWxsYXIiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4xLCJ2b3RlX2NvdW50IjoxNX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbFFTOWlsN1lxR2ptbUJlZlpZMjd1RzV3YnpULmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjY2MDY5OCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRmFzdGVyIFRoYW4gTGlnaHQ6IHRoZSBEcmVhbSBvZiBJbnRlcnN0ZWxsYXIgRmxpZ2h0Iiwib3ZlcnZpZXciOiLigJxGYXN0ZXIgVGhhbiBMaWdodOKAnSBleHBsb3JlcyB0aGUgbG9uZ3N0YW5kaW5nIHF1ZXN0IHRvIGRldmVsb3Agc3BhY2VjcmFmdCB3aXRoIGVub3VnaCBwb3dlciBhbmQgc3BlZWQgdG8gcmVhY2ggdGhlIHN0YXJzLiBUaGUgZmlsbSBhc2tzOiBXaGF0IHdpbGwgaXQgdGFrZSB0byByZWFjaCBhIG5ld2x5IGRpc2NvdmVyZWQgcGxhbmV0IGNpcmNsaW5nIG91ciBTdW7igJlzIG5lYXJlc3QgbmVpZ2hib3IsIFByb3hpbWEgQ2VudGF1cmk/IEJhc2VkIG9uIHJlYWwgc2NpZW5jZSBhbmQgZW5naW5lZXJpbmcsIOKAnEZhc3RlciBUaGFuIExpZ2h04oCdIHRha2VzIGF1ZGllbmNlcyBvbiBhIHRocmlsbGluZyBqb3VybmV5IGludG8gdGhlIGZ1dHVyZSwgYWJvYXJkIGxhc2VyLWRyaXZlbiBzcGFjZSBzYWlscywgYW50aW1hdHRlciBlbmdpbmVzLCBhbmQgZXZlbiB3YXJwIGRyaXZlIOKAkyByaWdodCBvdXQgb2Ygc2NpZW5jZSBmaWN0aW9uLiDigJxXaG8gY2FuIHNheSBob3cgZmFyLCBhbmQgaG93IGZhc3QsIG91ciB0ZWNobm9sb2d5IHdpbGwgb25lIGRheSB0YWtlIHVzP+KAnSBzYWlkIGRpcmVjdG9yIFRob21hcyBMdWNhcy4iLCJwb3B1bGFyaXR5IjoxMS4yMzIsInBvc3Rlcl9wYXRoIjoiL21iZ0p4QjcwdU1GSzJIOERYSFVqNWxBTWdYeC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTA2LTA3IiwidGl0bGUiOiJGYXN0ZXIgVGhhbiBMaWdodDogdGhlIERyZWFtIG9mIEludGVyc3RlbGxhciBGbGlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Niwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzEyXSwiaWQiOjU1MjUzMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFByb20gR29lcidzIEludGVyc3RlbGxhciBFeGN1cnNpb24iLCJvdmVydmlldyI6IkhpZ2ggc2Nob29sZXIgQmVubmV0dCBsYW5kcyB0aGUgcHJvbSBkYXRlIG9mIGhpcyBkcmVhbXMsIFNvcGhpZSwganVzdCBkYXlzIGJlZm9yZSB0aGUgZGFuY2UuIE5vdCBsb25nIGFmdGVyLCBoZSB3aXRuZXNzZXMgU29waGllIGJlaW5nIGFiZHVjdGVkIGJ5IGFsaWVucyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBOZXcgTWV4aWNvIGRlc2VydC4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIiLCJ0aXRsZSI6IlRoZSBQcm9tIEdvZXIncyBJbnRlcnN0ZWxsYXIgRXhjdXJzaW9uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsyOCwxNCw4NzhdLCJpZCI6NDYwNjE2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJJbnRlcnN0ZWxsYXIgQ2l2aWwgV2FyOiBTaGFkb3dzIG9mIHRoZSBFbXBpcmUiLCJvdmVydmlldyI6IlRoZSBJbXBlcmlhbCBFbXBpcmUgaXMgYXR0YWNrZWQgYnkgYW4gQWxsaWFuY2Ugb2YgcmViZWxzIGxlZCBieSBmYW5hdGljYWwgbXlzdGljcy4gVGhlIHJ1bGVyLCBFbXByZXNzIE5vYnUsIHRoZSA4dGggZ2VuZXJhdGlvbiBvZiBoZXIgZmFtaWx5LCB3YW50cyB0byBleGVjdXRlIGEgYm9sZCBwbGFuIHRvIHJlc2N1ZSBhIGN5Ym9yZywgTGVhaCBDNiwgdHJhcHBlZCBvbiB0aGUgYmF0dGxlIHJhdmFnZWQgcGxhbmV0IEVuZG9yLiBUaGUgRW1wcmVzcyBiZWxpZXZlcyBMZWFoIEM2IGhvbGRzIHRoZSBzZWNyZXQgdG8gZGVzdHJveWluZyB0aGUgQWxsaWFuY2Ugb2YgUmViZWxzIGJlZm9yZSB0aGVpciBpbnN1cmdlbmN5IGNhbiBraWxsIG1pbGxpb25zIG9mIGNpdGl6ZW5zIG9mIHRoZSBFbXBpcmUuIFNoZSByZWNydWl0cyBoZXIgaGVyb2ljIGZsZWV0IGNvbW1hbmRlciwgTG9yZCBHZW5lcmFsIEx1a2EgUmFhbiBhbmQgYXNrcyBoaW0gdG8gZ2F0aGVyIGEgdGVhbSBmcm9tIHRoZSBFbXBpcmUncyBlbGl0ZSBzb2xkaWVycywgdGhlIEdhbGFjdGljIFJhbmdlcnMuIFJhYW4gYXNzZW1ibGVzIHRoZSB0ZWFtIGluIHRoZSBydWlucyBvZiBFbmRvciB3aGljaCB3YXMgYXR0YWNrZWQgYnkgZGVwcmF2ZWQgUmViZWxzIGFuZCBvdXRsYXdzIGxlZCBieSwgS2luZG8tS2VyLCBhIGZhbmF0aWNhbCBteXN0aWMgaW4gRGFyayBFbmVyZ3kuIFRoZSBHYWxhY3RpYyBSYW5nZXJzIGJlZ2luIGEgZGVzcGVyYXRlIHNlYXJjaCB0byBmaW5kIGFuZCByZXNjdWUgTGVhaCBDNiBiZWZvcmUgdGhlIEFsbGlhbmNlIFJlYmVscyBjYW4uIiwicG9wdWxhcml0eSI6MS43NjEsInBvc3Rlcl9wYXRoIjoiLzFsRFk3WnBFS09sM09hSVFVUmpSYm1GUGZUOC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA0LTE1IiwidGl0bGUiOiJJbnRlcnN0ZWxsYXIgQ2l2aWwgV2FyOiBTaGFkb3dzIG9mIHRoZSBFbXBpcmUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NCwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1LDE4XSwiaWQiOjcxNjYwMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiT25seSBJbnRlcnN0ZWxsYXIgUGluYmFsbCBMaXZlcyBGb3JldmVyIiwib3ZlcnZpZXciOiJBIHlvdW5nIGJveSAocGxheWVkIGJ5IGFuIGFjdHVhbCByZS1wdXJwb3NlZCBTdW5kYXkgc2Nob29sIHB1cHBldCkgbG9zZXMgYWxsIGZhaXRoIGluIHJlbGlnaW9uIGFuZCBhZnRlcmxpZmUgb3B0aW9ucyBhZnRlciBoYXZpbmcgdG8gYnVyeSBoaXMgdW1wdGVlbnRoIHBldCwgYW5kIHZvd3MgdGhhdCBzb21lZGF5LCB3aGVuIGhlJ3MgYW4gYWR1bHQgd2l0aCBtb25leSwgaGUnbGwgZmluZCBhIHdheSB0byBiZWNvbWUgYW4gJ2V0ZXJuYWwgbW9sZWN1bGUnIHRocm91Z2ggc2NpZW5jZS4gVGhlbiwgdHdlbnR5LXR3byB5ZWFycyBsYXRlciwgdGhlIHBsYXlpbmcgb2YgYSBwaW5iYWxsIGdhbWUgYnJpbmdzIGRyZWRnZXMgdXAgdGhlIG1lbW9yeSBvZiB0aGF0IHZvdy4gVXRpbGl6aW5nIHRoZSBoYWxsdWNpbm9nZW5pYyBwcm9wZXJ0aWVzIG9mIGFsY29ob2wgYW5kIGNvdWdoIHN5cnVwIGJsZW5kcywgaGUgdW5kZXJ0YWtlcyB0aGUgZGVzaWduIG9mIGEgcGluYmFsbCBtYWNoaW5lIHNvIHBvaWduYW50IGFuZCBkaWduaWZpZWQgdGhhdCBpdCB3aWxsIGNvbnZpbmNlIHNjaWVudGlzdHMgdG8gY3JlYXRlIGEgcGluYmFsbCB0aGF0IHdlIGNhbiBkb3dubG9hZCBvdXIgY29uc2Npb3VzbmVzcyBpbnRvIGFuZCB0aGVyZWJ5IGJlY29tZSBkaWdpdGFsbHkgaW1tb3J0YWwuIiwicG9wdWxhcml0eSI6MC44NDMsInBvc3Rlcl9wYXRoIjoiL3VMSk1HWmxya212QU85UmlhOXpycDhHVXFqeC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEwLTA2LTI4IiwidGl0bGUiOiJPbmx5IEludGVyc3RlbGxhciBQaW5iYWxsIExpdmVzIEZvcmV2ZXIiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvOFRsTVQ1Wm9Mb0dTWDl1OGFvNlVWVzNHRlQ5LmpwZyIsImdlbnJlX2lkcyI6WzEyLDE2LDEwNDAyLDg3OF0sImlkIjoxMTA0OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJqYSIsIm9yaWdpbmFsX3RpdGxlIjoiSW50ZXJzdGVsbGEgNTU1NTogVGhlIDV0b3J5IG9mIHRoZSA1ZWNyZXQgNXRhciA1eXN0ZW0iLCJvdmVydmlldyI6IkZvdXIgdGFsZW50ZWQgYWxpZW4gbXVzaWNpYW5zIGFyZSBraWRuYXBwZWQgYnkgYSByZWNvcmQgcHJvZHVjZXIgd2hvIGRpc2d1aXNlcyB0aGVtIGFzIGh1bWFucy4gU2hlcCwgYSBzcGFjZSBwaWxvdCBpbiBsb3ZlIHdpdGggYmFzcyBwbGF5ZXIgU3RlbGxhLCBmb2xsb3dzIHRoZW0gdG8gRWFydGguIFJlcHJvZ3JhbW1lZCB0byBmb3JnZXQgdGhlaXIgcmVhbCBpZGVudGl0aWVzIGFuZCByZW5hbWVkIFRoZSBDcmVzY2VuZG9sbHMsIHRoZSBncm91cCBxdWlja2x5IGJlY29tZXMgYSBodWdlIHN1Y2Nlc3MgcGxheWluZyBzb3VsbGVzcyBjb3Jwb3JhdGUgcG9wLiBBdCBhIGNvbmNlcnQsIFNoZXAgbWFuYWdlcyB0byBmcmVlIGFsbCB0aGUgbXVzaWNpYW5zIGV4Y2VwdCBTdGVsbGEsIGFuZCB0aGUgYmFuZCBzZXRzIG91dCB0byByZWRpc2NvdmVyIHdobyB0aGV5IHJlYWxseSBhcmUgLS0gYW5kIHRvIHJlc2N1ZSBTdGVsbGEuIiwicG9wdWxhcml0eSI6NS40NzIsInBvc3Rlcl9wYXRoIjoiL0FzdlBnZGNTbEhvY0FiTXAzeUdaWGpQaUtLRi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDAzLTA1LTI4IiwidGl0bGUiOiJJbnRlcnN0ZWxsYSA1NTU1OiBUaGUgNXRvcnkgb2YgdGhlIDVlY3JldCA1dGFyIDV5c3RlbSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjcsInZvdGVfY291bnQiOjIyMn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjo3NjMxNzksIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkNvc21pYyBKb3VybmV5OiBUaGUgVm95YWdlciBJbnRlcnN0ZWxsYXIgTWlzc2lvbiBhbmQgTWVzc2FnZSIsIm92ZXJ2aWV3IjoiVGhlIGZhcnRoZXN0IFZveWFnZXI6IFwiQ29zbWljIEpvdXJuZXksXCIgYSBkb2N1bWVudGFyeSBwcmVtaWVyaW5nIG9uIHRoZSBBJkUgY2FibGUgbmV0d29yaywgdGVsbHMgdGhlIHNhZ2Egb2YgdGhlIGZhcnRoZXN0LWZsdW5nIHNwYWNlIGpvdXJuZXkgdG8gZGF0ZSAtIHRoZSBWb3lhZ2VyIGludGVyc3RlbGxhciBtaXNzaW9uLCB3aGljaCBzdGFydGVkIG91dCAyNSB5ZWFycyBhZ28gYW5kIHNhaWxlZCBwYXN0IEp1cGl0ZXIsIFNhdHVybiwgVXJhbnVzIGFuZCBOZXB0dW5lIGluIHRoZSAxOTgwcy4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIyMDAzLTAxLTE2IiwidGl0bGUiOiJDb3NtaWMgSm91cm5leTogVGhlIFZveWFnZXIgSW50ZXJzdGVsbGFyIE1pc3Npb24gYW5kIE1lc3NhZ2UiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzI4XSwiaWQiOjY0OTc0NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJ6aCIsIm9yaWdpbmFsX3RpdGxlIjoi5pif6ZmF5rWB5rWqIiwib3ZlcnZpZXciOiJUaGUgZmlsbSB0ZWxscyB0aGF0IHRoZSBjYXRhc3Ryb3BoZSBlcmEsIHRoZSBlYXJ0aCBpcyBhIHdhc3RlIGxhbmQsIHRoZSBzdXJ2aXZvcnMgYXJlIGRpdmlkZWQgaW50byB3YW5kZXJlcnMgYW5kIGNpdmlsaWFucywgdGhleSBhcmUgYXR0YWNoZWQgdG8gdGhlIHJ1bGUgb2YgdGhlIGludGVyc3RlbGxhciBhcm1lZCBncm91cHMsIGluIHdoaWNoIHRoZSByb2d1ZXMgcmVseSBvbiB0aGUgcGx1bmRlcmluZyBvZiBjaXZpbGlhbiBtYXRlcmlhbHMgYXMgYSBsaXZlbGlob29kLCBtYWtpbmcgY2l2aWxpYW5zIGluIHRoaXMgaGFyc2ggSXQgaXMgZGlmZmljdWx0IHRvIHN1cnZpdmUgaW4gdGhlIGVudmlyb25tZW50LiBBZnRlciBhIGh1bmRyZWQgeWVhcnMgb2YgYmxhY2sgdGVjaG5vbG9neSBleHBsb3Npb24sIGl0IHdpbGwgYnJpbmcgYWJvdXQgYSBjaXZpbGl6ZWQgcmVuYWlzc2FuY2UuIEluIHRoZSBmYWNlIG9mIHRoZSBkZXRlcmlvcmF0aW5nIHBsYW5ldCwgbWFua2luZCBpcyBkZXRlcm1pbmVkIHRvIGNvbnRpbnVlIHRoZSByYWNlIGFuZCBpcyBkZXRlcm1pbmVkIHRvIGludGVyc3RlbGxhciBpbW1pZ3JhdGlvbi4gVGhlIFwiY3VydmF0dXJlIGVuZ2luZVwiIGRldmVsb3BlZCBieSB0aGUgQ2hpbmVzZSByZXNlYXJjaGVyIEhhaWxlaSBoYXMgYmVjb21lIHRoZSBrZXkgdG8gdGhlIGludGVyc3RlbGxhciBpbW1pZ3JhdGlvbiwgYW5kIGlzIGFsc28gdGhlIHRhcmdldCBvZiByb2JiZXJzIGFuZCBpbnRlcnN0ZWxsYXIgYXJtZWQgZ3JvdXBzLiIsInBvcHVsYXJpdHkiOjAuNjYsInBvc3Rlcl9wYXRoIjoiL29VV0RiZGU1Yld1OXN5QlpnbFdESXdCMVNQbS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE5LTA4LTAyIiwidGl0bGUiOiJJbnRlcnN0ZWxsYXIgV2FuZGVyaW5nIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOls4NzhdLCJpZCI6MjYxNDQzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBbmdyeSBQbGFuZXQiLCJvdmVydmlldyI6IkEgY3JpbWluYWwgc2VudGVuY2VkIHRvIGxpZmUgb24gYSBwcmlzb24gcGxhbmV0IHJldmVhbHMgaGlzIHRydWUgcHVycG9zZTogdG8gZXh0cmFjdCByZXZlbmdlIG9uIHRoZSBraWxsZXJzIHdobyBtdXJkZXJlZCBoaXMgZmFtaWx5LiIsInBvcHVsYXJpdHkiOjIuNDk4LCJwb3N0ZXJfcGF0aCI6Ii82QnYwcmw5UjVnYU44WDU4TE9qVVQ0TVdLUjcuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwOC0wMS0wMSIsInRpdGxlIjoiQW5ncnkgUGxhbmV0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuNSwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIveWw5UXF0UzN0YkxDTDRlNmxITTM0OWpvQUxLLmpwZyIsImdlbnJlX2lkcyI6WzI4LDg3OCw1M10sImlkIjo0NzY2Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVHJhbmNlcnMgNTogU3VkZGVuIERldGgiLCJvdmVydmlldyI6IkphY2sgRGV0aCBpcyBiYWNrIGZvciBvbmUgbW9yZSByb3VuZCB3aXRoIHRoZSB0cmFuY2Vycy4gSmFjayBtdXN0IGF0dGVtcHQgdG8gZmluZCBoaXMgd2F5IGhvbWUgZnJvbSB0aGUgb3RoZXItZGltZW5zaW9uYWwgd29ybGQgb2YgT3JwaGV1cywgd2hlcmUgbWFnaWMgd29ya3MgYW5kIHRoZSB0cmFuY2VycyB3ZXJlIHRoZSBydWxpbmcgY2xhc3MgKGJlZm9yZSBUcmFuY2VycyBJViwgdGhhdCBpcykuIFVuZm9ydHVuYXRlbHksIEphY2sncyBxdWVzdCB0byBmaW5kIHRoZSBteXN0aWNhbCBUaWFtb25kIGluIHRoZSBDYXN0bGUgb2YgVW5yZWxlbnRpbmcgVGVycm9yIG1heSBiZSB0aHdhcnRlZCBieSB0aGUgcmV0dXJuIG9mIENhbGliYW4sIGtpbmcgb2YgdGhlIHRyYW5jZXJzIHdobyB3YXMgdGhvdWdodCBkZWFkLiIsInBvcHVsYXJpdHkiOjMuMTA3LCJwb3N0ZXJfcGF0aCI6Ii81R0FaaXVkcmRWaE1hSGVBaHN2aHFxWkpvRFUuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5NC0xMS0wNCIsInRpdGxlIjoiVHJhbmNlcnMgNTogU3VkZGVuIERldGgiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC44LCJ2b3RlX2NvdW50IjoxMn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvYVBYTnlHNjAzNVd6MkRodEdBZ2Y3UGVHTnN6LmpwZyIsImdlbnJlX2lkcyI6WzI4LDg3OF0sImlkIjo0NzY2Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVHJhbmNlcnMgNDogSmFjayBvZiBTd29yZHMiLCJvdmVydmlldyI6IkphY2sgaXMgbm93IGJhY2sgaW4gdGhlIGZ1dHVyZS4gSGUgaGFkIHNpbmNlIGxvc3QgTGVuYSwgYW5kIGZpbmRzIG91dCB0aGF0IGhlJ3MgbG9zdCBoaXMgb3RoZXIgd2lmZSBBbGljZSB0byBub25lIG90aGVyIHRoYW4gSGFycmlzLiBXaGlsZSBoZWFkaW5nIG91dCBmb3IgYW5vdGhlciBhc3NpZ25tZW50LCBzb21ldGhpbmcgZ29lcyBhd3J5IHdpdGggdGhlIFRDTCBjaGFtYmVyLiBKYWNrIGZpbmRzIGhpbXNlbGYgaW4gYSB3aG9sZSBuZXcgZGltZW5zaW9uLiBIZSBhbHNvIHJ1bnMgYWNyb3NzIGEgZGlmZmVyZW50IHZlcnNpb24gb2YgdHJhbmNlcnMuIFRoZXNlIGd1eXMgc2VlbSB0byBiZSBpbiBjb250cm9sIG9mIHRoaXMgcGxhbmV0LiBKYWNrIG1hbmFnZXMgdG8gYXNzaXN0IGEgcmViZWwgZ3JvdXAga25vd24gYXMgdGhlIFwiVHVubmVsIFJhdHNcIiBjcnVzaCB0aGUgcnVsZSBvZiB0aGUgZXZpbCBMb3JkIENhbGFiYW4uIiwicG9wdWxhcml0eSI6My43NiwicG9zdGVyX3BhdGgiOiIvOTJqMjFKNUR4b3ladENFMldXTW9hZldoNWdvLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTQtMDItMDIiLCJ0aXRsZSI6IlRyYW5jZXJzIDQ6IEphY2sgb2YgU3dvcmRzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMSwidm90ZV9jb3VudCI6MTZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6NzcyMjY1LCJvcmlnaW5hbF9sYW5ndWFnZSI6InpoIiwib3JpZ2luYWxfdGl0bGUiOiLmmJ/pmYXlj5jnp40iLCJvdmVydmlldyI6IkFmdGVyIGxvbmcgeWVhcnMgb2Ygc2VhcmNoaW5nLCB0aGUgdW5rbm93biBjcmVhdHVyZSB3YXMgZmluYWxseSBjYXB0dXJlZCBieSB0aGUgY3JldyBvZiB0aGUgVGh1bmRlciBhbmQgbmFtZWQgXCJCYWFsXCIuIFVuZGVyIHRoZSBsdXJlIG9mIEJhYWwsIHRoZSB5b3VuZyBKYW1pZSByZWxlYXNlZCBpdC4gXCJCYWFsXCIgd2hvIGVzY2FwZWQgZnJvbSB0aGUgZXhwZXJpbWVudGFsIHRhbmsga2lsbGVkIGFsbCB0aGUgY3JldyBhbmQgSmFtaWUncyBwYXJlbnRzLCBhbmQgdGhlIHlvdW5nIEphbWllIGVzY2FwZWQgYmFjayB0byBFYXJ0aCBpbiBhbiBlc2NhcGUgY2Fwc3VsZSBhbG9uZS4gVHdlbnR5IHllYXJzIGxhdGVyLCBhIHZhcmlhbnQgb2YgXCJCYWFsXCIgYXBwZWFyZWQgb24gdGhlIGVhcnRoLCBhbmQgSmFtaWUgYmVnYW4gdGhlIHN0b3J5IG9mIHRoZSBqb3VybmV5IHRvIHNhdmUgbWFua2luZCBhbmQgc2VsZi1yZWRlbXB0aW9uIiwicG9wdWxhcml0eSI6MS40LCJwb3N0ZXJfcGF0aCI6Ii9tTWlkZmNWVmFFU2JZZEY5VHpnZWpwM0Z2UFIuanBnIiwicmVsZWFzZV9kYXRlIjoiIiwidGl0bGUiOiJWYXJpYW50IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9XSwidG90YWxfcGFnZXMiOjEsInRvdGFsX3Jlc3VsdHMiOjE3fQ==
  recorded_at: Wed, 09 Dec 2020 01:26:24 GMT
recorded_with: VCR 6.0.0
