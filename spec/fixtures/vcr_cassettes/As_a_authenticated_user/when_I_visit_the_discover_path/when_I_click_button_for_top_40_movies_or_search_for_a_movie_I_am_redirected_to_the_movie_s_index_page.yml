---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<MOVIE_API_KEY>&language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 03 Dec 2020 23:04:51 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 6d9f09528e589f3fa7ca05f965ea37a2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - r9o1xbjuE9ph4Nw8it9z3fzDKuvDKQiILMV2TdtLj5Q9zuUgNOF-Gg==
      Age:
      - '7079'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 04 Dec 2020 01:02:50 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<MOVIE_API_KEY>&language=en-US&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 03 Dec 2020 23:28:55 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 e1b5abb53c407f0a057625c46693461d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 7-QYV5lOsUwsaGWevpqgs4ARBjzZBkj9Ci4mklAlnwgQvRlh_XGD4w==
      Age:
      - '5636'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 04 Dec 2020 01:02:51 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_API_KEY>&include_adult=false&language=en-US&page=1&query=Sunset
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 04 Dec 2020 01:02:51 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e1b5abb53c407f0a057625c46693461d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - RD3PDDX7r2zV3l0NV_2Qw2kgSCu1iAQdUvyfXBuetctmGniR3cog5g==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 04 Dec 2020 01:02:51 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_API_KEY>&include_adult=false&language=en-US&page=2&query=Sunset
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 04 Dec 2020 01:02:51 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ce4b35590464ed34415a13badd946ebb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 3N5PkZDiRqBjD75BYEheq1wY6JgoZNY54tn7v5daO2jTAu_pYcKVBQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoyLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZ3paZGNKVGFWaUdYNGNGbktFMDlZam41ZHh6LmpwZyIsImdlbnJlX2lkcyI6WzEwNzQ5LDEwNzcwXSwiaWQiOjY5MDc0MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTG92ZSBhdCBTdW5zZXQgVGVycmFjZSIsIm92ZXJ2aWV3IjoiRXhoYXVzdGVkIGZyb20gaGVyIG1hcmtldGluZyBqb2IsIFNvcGhpZSByZW50cyBhbiBBaXJibmIgd2l0aCBhIHdpZG93ZWQgZmF0aGVyIGFuZCBoaXMgZGF1Z2h0ZXIgdG8gd2luZCBkb3duLiBIb3dldmVyLCB0aGUgZGF1Z2h0ZXIgaXMgc2V0IG9uIG1ha2luZyBoZXIgZmF0aGVyIGZhbGwgaW4gbG92ZSBvbmNlIG1vcmUsIHdpdGggaGVyIHNpZ2h0IHNldCBvbiBTb3BoaWUuIiwicG9wdWxhcml0eSI6NC4wODUsInBvc3Rlcl9wYXRoIjoiL0Npd1BZT01FWkczR0JVbmdSMmt1R29PRlhrLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMDQtMTgiLCJ0aXRsZSI6IkxvdmUgYXQgU3Vuc2V0IFRlcnJhY2UiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS4zLCJ2b3RlX2NvdW50Ijo1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9hRk9DTHJZNkkzbm9aNVlZZUtrVjk4YW9MOUwuanBnIiwiZ2VucmVfaWRzIjpbMThdLCJpZCI6NTY1OTA3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSYWluYm93J3MgU3Vuc2V0Iiwib3ZlcnZpZXciOiJSYW1vbiwgYW4gODQteWVhci1vbGQgcmV0aXJlZCBwb2xpdGljaWFuLCBzaG9ja3MgaGlzIGZhbWlseSB3aXRoIGhpcyBkZWNpc2lvbiB0byBsaXZlIHdpdGggYW5kIHRha2UgY2FyZSBvZiBoaXMgZ2F5LCBjaGlsZGhvb2QgYmVzdCBmcmllbmQsIEZyZWRvLCB3aG/igJlzIGR5aW5nIG9mIGNhbmNlci4gQXMgaXQgdHVybnMgb3V0LCB0aGUgdHdvIG1lbiBhcmUgcm9tYW50aWNhbGx5IGluIGxvdmUuIiwicG9wdWxhcml0eSI6MS40LCJwb3N0ZXJfcGF0aCI6Ii9lbGcyaDRZdjB3eTV5Qnh3ZWtlTElJZFNURXMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOC0xMi0yNSIsInRpdGxlIjoiUmFpbmJvdydzIFN1bnNldCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbNTMsMjcsOTY0OF0sImlkIjozMjc0NDUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpbGwgU3Vuc2V0Iiwib3ZlcnZpZXciOiJUaHJlZSBzdHJhbmdlcnMgYXdha2UgaW4gYSB3b29kbGFuZCBjbGVhcmluZyBiZXNpZGUgYSBzaGFsbG93IGdyYXZlIGFuZCBkaXNjb3ZlciBvbmUgb2YgdGhlbSBpcyBkZXN0aW5lZCB0byBmaWxsIGl0IGJ5IHN1bnNldC4iLCJwb3B1bGFyaXR5IjoxLjQzNCwicG9zdGVyX3BhdGgiOiIvdThHN1FEV3NHaE1nWWlDMWl2NTJRdVJWQkgxLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMDUtMjEiLCJ0aXRsZSI6IlRpbGwgU3Vuc2V0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuOCwidm90ZV9jb3VudCI6M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1XSwiaWQiOjY1MDk2Niwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGltIFZpbmU6IFN1bnNldCBNaWxrIElkaW90Iiwib3ZlcnZpZXciOiJJdCdzIFRpbSBWaW5lIGhpdHRpbmcgdGhlIHN0YWdlIGF0IGZ1bGwgc3BlZWQgYW5kIGZpcmluZyBvZmYgam9rZXMgbGlrZSBhIHRlbm5pcyBiYWxsIHNlcnZpbmctbWFjaGluZSBzZXQgdG8gbWF4aW11bS4gIFByZXBhcmUgdG8gYmUgYm9tYmFyZGVkIHdpdGggYWJzb2x1dGUgTm9uc2Vuc2UuIEV4cGVyaWVuY2UgT3dsIHdpdGggYSB0b3dlbCEgV2l0bmVzcyB0aGUgd2VhcmluZyBvZiBhbiBpY2UgY3JlYW0gaGF0IHVuZGVyIGhvdCBsaWdodHMhIE1lZXQgdGhlIHJlY29yZCBUb3VjYW4hIFNpbmcgYWJvdXQgQ2FrZSBhbmQgTWlsaz8gIFRoaXMgaXMgVGltJ3MgU2lsbGllc3Qgc2hvdyB0byBkYXRlLiBNb3JlIGxhdWdocyB0aGFuIGV2ZXIgYmVmb3JlIGFuZCBoaXMgb25seSBzaG93IHdlYXJpbmcgYmx1ZSBzaG9ydHMuICBUZWRkaWVzIG9uIGEgaG9vcCEgIFRlZGRpZXMgb24gYSBob29wISIsInBvcHVsYXJpdHkiOjQuODM0LCJwb3N0ZXJfcGF0aCI6Ii9yWWxZcXFVSU9OV1NjQTE0ZlhyRk5NYTdmRTMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMS0yNSIsInRpdGxlIjoiVGltIFZpbmU6IFN1bnNldCBNaWxrIElkaW90IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzU1WGt3MndDcDVsVXlmZDFXM0YwZlZhNm1lMC5qcGciLCJnZW5yZV9pZHMiOltdLCJpZCI6MjI0MjY2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdW5zZXQgR3JpbGwiLCJvdmVydmlldyI6IlJ5ZGVyIEhhcnQgaXMgYSBwcml2YXRlIGludmVzdGlnYXRvciBhbmQgZm9ybWVyIHBvbGljZSBvZmZpY2VyIHdobyBpcyBkb3duIG9uIGhpcyBsdWNrIGFuZCBkcmlua3MgdG9vIG11Y2guIEhpcyBlc3RyYW5nZWQgd2lmZSBBbml0YSBydW5zIGEgYmFyIGFuZCByZXN0YXVyYW50IGNhbGxlZCB0aGUgU3Vuc2V0IEdyaWxsIGFuZCBpcyByb21hbnRpY2FsbHkgaW52b2x2ZWQgd2l0aCAgYSBjb3Agd2hvICB3b3JrZWQgd2l0aCBIYXJ0LiIsInBvcHVsYXJpdHkiOjIuMzQxLCJwb3N0ZXJfcGF0aCI6Ii9xVnNZbTB3WFhZWGhlQ2hqa1ZWTEE0SE82Y0IuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5My0wOS0yNyIsInRpdGxlIjoiU3Vuc2V0IEdyaWxsIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlszNV0sImlkIjozMjg5MzgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN1bnNldCBDb3ZlIiwib3ZlcnZpZXciOiJBdCB0aGUgZW5kIG9mIHRoZSBzY2hvb2wgeWVhciwgYSBncm91cCBvZiBzdHVkZW50cyBoZWFkIG91dCB0byBTdW5zZXQgQ292ZSBhbmQgZG8gZXZlcnl0aGluZyB0aGV5IGNhbiB0byBzYXZlIHRoZWlyIGZhdm91cml0ZSBiZWFjaC4iLCJwb3B1bGFyaXR5IjoxLjU0OSwicG9zdGVyX3BhdGgiOiIvc1d1MlY0ZHJuN2xndFdDdVdObEdMRkV2SVNSLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzgtMDQtMDEiLCJ0aXRsZSI6IlN1bnNldCBDb3ZlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6NzUyNjQ4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImphIiwib3JpZ2luYWxfdGl0bGUiOiJTaWxlbmNlIGFuZCBTdW5zZXQiLCJvdmVydmlldyI6IkNvbnRlbXBsYXRpdmUgYW5kIGFsbW9zdCB3aXRob3V0IGRpYWxvZ3VlcywgdGhlIGZpbG0gc2hvd3MgdGhlIHJvdXRpbmUgb2YgaW5oYWJpdGFudHMgaW4gYSBjaXR5OiBhIHlvdW5nIHdvbWFuIHdobyBsaXZlcyBhbG9uZTsgYW4gZWxkZXJ5IHRoYXQgbGl2ZXMgaW4gdGhlIHN0cmVldCwgbmV4dCB0byB0aGUgcml2ZXI7IGEgcG9saWNlIG9mZmljZXI7IGN1c3RvbWVycyBpbiBhIGJhcjsgdHdvIHN0dWRlbnRzLiBMaXR0bGUgYnkgbGl0dGxlLCB0aHJvdWdoIGZsYXNoYmFja3MsIHRoZSBwbG90IGNvbm5lY3RzIHRoZXNlIGNoYXJhY3RlcnMuIiwicG9wdWxhcml0eSI6MC44ODgsInBvc3Rlcl9wYXRoIjoiL2dRTFhiSE03d2FaWUlWcEdEVjA4OW9TWnVxWC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIwLTEwLTIyIiwidGl0bGUiOiJTaWxlbmNlIGFuZCBTdW5zZXQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NSwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNEEyY01lOFlyYmJDQ25hdmF2eU1vVTBZNVY4LmpwZyIsImdlbnJlX2lkcyI6WzgwLDE4XSwiaWQiOjQ4MDUxMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3Vuc2V0IFBhcmsiLCJvdmVydmlldyI6Ikdpbm8gU2FyY2lvbmUsIGEgYm94ZXIsIGlzIGZvcmNlZCB0byB0YWtlIGhpcyBmaWdodCBvdXRzaWRlIHRoZSByaW5nIGludG8gdGhlIGJhY2sgYWxsZXlzIG9mIFN1bnNldCBQYXJrIHRvIHN0YW5kIHVwIGZvciB3aGF0J3MgcmlnaHQgYW5kIHByb3RlY3QgdGhvc2UgaGUgbG92ZXMuIiwicG9wdWxhcml0eSI6MS4yNTUsInBvc3Rlcl9wYXRoIjoiL2NTS01Id2RxNGtGTExGSmN5RkZJM1lkbVdLQi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTEwLTA5IiwidGl0bGUiOiJTdW5zZXQgUGFyayIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjoxMCwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvN29SZ2ExdHBHM3pyYklJOUdBakJZWmhMaFBSLmpwZyIsImdlbnJlX2lkcyI6WzI3XSwiaWQiOjUzNDMyMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3Vuc2V0IFNvY2lldHkiLCJvdmVydmlldyI6IldlbGNvbWUgdG8gdGhlIHdvcmxkIG9mIHRoZSBTdW5zZXQgU29jaWV0eSwgYSBzZWNyZXQgb3JnYW5pemF0aW9uIGluIEhvbGx5d29vZCB3aGVyZSBwYXJ0aWVzIGFyZSBoZWxkLCBtdXNpY2lhbnMgZ2F0aGVyIGFuZCBibG9vZCBmbG93cyBmcmVlbHkhIEFjZSAoTGVtbXkgZnJvbSBcIk1vdG9yaGVhZFwiKSBpcyB0aGUgaGVhZCB2YW1waXJlIGluIGNoYXJnZSB3aG8gbGlrZXMgdG8ga2VlcCB0aGUgZnVuIGdvaW5nIHdoaWxlIGtlZXBpbmcgdGhlIHByb2ZpbGUgbG93LiBIb3dldmVyLCBkdWUgdG8gYSBmZXcgcmViZWxzIGluIGhpcyBtaWRzdCwgaHVtYW5zIGFyZSBzdGFydGluZyB0byBjYXRjaCBvbiB0byBoaXMgdmFtcGlyZSB3YXlzLiIsInBvcHVsYXJpdHkiOjEuMjg3LCJwb3N0ZXJfcGF0aCI6Ii82azIzQ3loalJjd25pWWJQbTM0bUpQd0xMazYuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOC0wNy0yNyIsInRpdGxlIjoiU3Vuc2V0IFNvY2lldHkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzgwLDE4LDk2NDhdLCJpZCI6MTE2NzM4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdW5zZXQgTXVyZGVyIENhc2UiLCJvdmVydmlldyI6IkEgbmlnaHRjbHViIGRhbmNlciAoU2FsbHkgUmFuZCkgc2Vla3MgdmVuZ2VhbmNlIGZvciB0aGUgbXVyZGVyIG9mIGhlciBmYXRoZXIuIiwicG9wdWxhcml0eSI6MC45NjUsInBvc3Rlcl9wYXRoIjoiLzZXRlFDbzZYV0IwYXpBUnZHNUFYMUhLZm1SSC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTM4LTExLTExIiwidGl0bGUiOiJTdW5zZXQgTXVyZGVyIENhc2UiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NCwidm90ZV9jb3VudCI6M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1LDE4XSwiaWQiOjE5MzMwNCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFN1bnNldCBTaXgiLCJvdmVydmlldyI6IldoZW4gdGhlIHJvY2vigJlu4oCZcm9sbCBkcmVhbSBlbmRzLCB0aGUgaGFyZCBwYXJ0IGlzIHdha2luZyB1cC4gIFJpZmYgd2FzIHRoZSBsZWdlbmRhcnkgZ3VpdGFyaXN0IGluIG9uZSBvZiB0aGUgYmlnZ2VzdCByb2NrIGJhbmRzIGluIEF1c3RyYWxpYW4gaGlzdG9yeS4gQnV0IHRoZSA4MHMgYXJlIGdvbmUgYW5kIHdpdGhvdXQgbXVzaWMsIFJpZmbigJlzIGxpZmUgaGFzIHNwaXJhbGxlZCBvdXQgb2YgY29udHJvbC4gIFdpdGggaGlzIG5ldyBiYW5kIFRoZSBTdW5zZXQgU2l4LCBoZeKAmXMgZ290IG9uZSBsYXN0IGNoYW5jZSBhdCBtYWtpbmcgaXQ7IG9uZSBsYXN0IGNoYW5jZSBvZiBsYW5kaW5nIHRoZSByZWNvcmQgZGVhbCB0aGF0IHdpbGwgZ2V0IGhpbSBiYWNrIGluIHRoZSBnYW1lLiAgT25lIHByb2JsZW3igKYgdGhlIGJhbmQgaXMgZmFsbGluZyBhcGFydC4gQW5kIGl04oCZcyBhbGwgaGlzIGZhdWx0LiBBcyB0aW1lIHRpY2tzIGRvd24gdG8gdGhlaXIgaW1taW5lbnQgZ2lnLCBjYW4gUmlmZiBnZXQgdGhlIGJhbmQgYmFjayBvbiB0aGUgcmFpbHMgaW4gdGltZT8gIFRoZSBTdW5zZXQgU2l4IGlzIGEgZmVlbC1nb29kIGNvbWVkeSBhYm91dCBhIGJhbmTigJlzIHJvY2t5IHJvYWQgdG8gbXVzaWNhbCBoZWF2ZW4uIiwicG9wdWxhcml0eSI6MS41OTEsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIyMDEzLTA1LTE0IiwidGl0bGUiOiJUaGUgU3Vuc2V0IFNpeCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LCJ2b3RlX2NvdW50IjoxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMThdLCJpZCI6Mzg1MjcyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdW5zZXQgQmVhdCIsIm92ZXJ2aWV3IjoiUG9saWNlIGRyYW1hIGludm9sdmluZyBhIHRlYW0gb2YgeW91bmcgTG9zIEFuZ2VsZXMgdW5kZXJjb3ZlciBjb3BzIHBvc2luZyBhcyBiaWtlcnMgdG8gbmFpbCBzdHJlZXQiLCJwb3B1bGFyaXR5IjowLjY5OCwicG9zdGVyX3BhdGgiOiIva3ZJOXVmQzN2ckNDUUp1a0hsWUNYenpvalhBLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTAtMDQtMjEiLCJ0aXRsZSI6IlN1bnNldCBCZWF0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsxNCwxOF0sImlkIjoxMDUzNTIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBMYW5kIEJleW9uZCB0aGUgU3Vuc2V0Iiwib3ZlcnZpZXciOiJBIHBvb3IgeW91bmcgYm95IGdvZXMgb24gYSBmaWVsZCB0cmlwIGFuZCBkcmVhbXMgb2YgZXNjYXBpbmcgdG8gYSBsYW5kIGJleW9uZCB0aGUgc3Vuc2V0LiIsInBvcHVsYXJpdHkiOjIuMjg3LCJwb3N0ZXJfcGF0aCI6Ii84UGNnZzhLenJIQ2d1amVqYVlGSURsb2xvYkMuanBnIiwicmVsZWFzZV9kYXRlIjoiMTkxMi0xMC0yOCIsInRpdGxlIjoiVGhlIExhbmQgQmV5b25kIHRoZSBTdW5zZXQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni43LCJ2b3RlX2NvdW50IjoyMX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjozNDA3NTMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN1bnNldCBFZGdlIiwib3ZlcnZpZXciOiJUd28gbmFycmF0aXZlcyBjbGFzaCB2aW9sZW50bHkgaW4gdGhpcyBtZWRpdGF0aXZlIHBvcnRyYXlhbCBvZiBkaXNhZmZlY3RlZCB5b3V0aCBzZXQgaW4gYSBncmF2ZXlhcmQgb2YgYWJhbmRvbmVkIG1vYmlsZSBob21lcyBrbm93biBhcyBTdW5zZXQgRWRnZS4gV2UgZm9sbG93IGEgZ3JvdXAgb2YgZm91ciBhaW1sZXNzLCBzdWJ1cmJhbiB0ZWVuYWdlcnMgLSB0aGV5IHNrYXRlYm9hcmQgdGhlIHBhcmssIHNsZWVwIGluIHRoZSBzdW4sIGFuZCBydW1tYWdlIHRocm91Z2ggdGhlIGRlY2F5aW5nIHJlbWFpbnMgY29tcGxldGVseSB1bmF3YXJlIHRoYXQgdGhpcyBpcyB3aGVyZSBhIGxvbmVzb21lIHRlZW4gaXMgY29uZnJvbnRpbmcgYSBob3JyaWZpYyBwYXN0LiBEYXkgdHVybnMgdG8gbmlnaHQsIHBlb3BsZSBkaXNhcHBlYXIsIGFuZCB0aGUgc2VjcmV0cyBvZiBTdW5zZXQgRWRnZSBhcmUgcmV2ZWFsZWQgaW4gYSBwYXJhbHl6aW5nIGZpbmFsZS4iLCJwb3B1bGFyaXR5IjoxLjIxOCwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDUtMjkiLCJ0aXRsZSI6IlN1bnNldCBFZGdlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzdMWWloVGhWYXpPZUJ1UVdoZHNhengzQWZmdi5qcGciLCJnZW5yZV9pZHMiOlszNV0sImlkIjoyMTkyMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUmljaGFyZCBQcnlvcjogTGl2ZSBvbiB0aGUgU3Vuc2V0IFN0cmlwIiwib3ZlcnZpZXciOiJSaWNoYXJkIFByeW9yJ3Mgc3RhbmQtdXAgYWN0IGluY2x1ZGVzIGhpcyBmcmFuayBkaXNjdXNzaW9uIGFib3V0IGhpcyBmcmVlYmFzaW5nIGFkZGljdGlvbiwgYXMgd2VsbCBhcyB0aGUgaW5mYW1vdXMgbmlnaHQgb24gSnVuZSA5LCAxOTgwIHRoYXQgaGUgY2F1Z2h0IG9uIGZpcmUuIiwicG9wdWxhcml0eSI6My43MDUsInBvc3Rlcl9wYXRoIjoiL2tpVnJZWGlYYWNuQ3hYNnM1SGs3bEpweEdHQS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTgyLTAzLTEyIiwidGl0bGUiOiJSaWNoYXJkIFByeW9yOiBMaXZlIG9uIHRoZSBTdW5zZXQgU3RyaXAiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny43LCJ2b3RlX2NvdW50Ijo0NX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM3XSwiaWQiOjI0NDEwMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3Vuc2V0IGluIHRoZSBXZXN0Iiwib3ZlcnZpZXciOiJSb3kgcHV0cyBhIHN0b3AgdG8gZ3VuIHNtdWdnbGluZy4iLCJwb3B1bGFyaXR5IjoxLjk2NCwicG9zdGVyX3BhdGgiOiIvcm54dVM1dGx3YURnSlFwUDk0S2N3Y1g5Uk4yLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NTAtMDktMjUiLCJ0aXRsZSI6IlN1bnNldCBpbiB0aGUgV2VzdCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjMsInZvdGVfY291bnQiOjR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsyN10sImlkIjo3MzQ3MDcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJlZCBTdW5zZXQgRHJpdmUiLCJvdmVydmlldyI6IldoZW4gYSBzZXJpYWwga2lsbGVyIGlzIHRhcmdldGluZyBwcm9zdGl0dXRlcyBhbmQgZHJhaW5pbmcgdGhlaXIgYmxvb2QsIGEgZGV0ZWN0aXZlIGFuZCBoaXMgdW51c3VhbCBuZXcgcGFydG5lciBtdXN0IHRyeSB0byBzb2x2ZSB0aGUgY2FzZSBiZWZvcmUgYW5vdGhlciB5b3VuZyB3b21hbiBpcyBraWxsZWQuIiwicG9wdWxhcml0eSI6MS43NzIsInBvc3Rlcl9wYXRoIjoiLzlOSmtJRkczZXpIRFRLN3NZTUVMQzFaQmhyNC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE5LTEwLTEyIiwidGl0bGUiOiJSZWQgU3Vuc2V0IERyaXZlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2RBZTVaanlLVmVxaDBvVEdybWxPRVhwMnh6bi5qcGciLCJnZW5yZV9pZHMiOlsyOCwzNSwxOCwzN10sImlkIjoxOTI2NzgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN1bnNldCBSYW5nZSIsIm92ZXJ2aWV3IjoiR3JhbnQgaGlkZXMgc3RvbGVuIG1vbmV5IGluIHRoZSBsdWdnYWdlIG9mIEJvbm5pZSBTaGVhIHdobyBpcyBtb3Zpbmcgd2VzdC4gTGF0ZXIgd2hlbiBoZSBhbmQgaGlzIG1lbiBhcnJpdmUgdG8gcmV0cmlldmUgdGhlIG1vbmV5LCB0aGV5IGFsc28ga2lkbmFwIEJvbm5pZS4gVGhpcyBzZW5kcyBSZWFzb25pbicgQmF0ZXMgYW5kIGhpcyBjb3doYW5kcyBvbiB0aGVpciBob3JzZXMgYWZ0ZXIgdGhlIGdhbmdzdGVycyBpbiB0aGVpciBjYXJzLiIsInBvcHVsYXJpdHkiOjAuOTkyLCJwb3N0ZXJfcGF0aCI6Ii9zcTFJUU9UdzI2anFPZDNYOUZkUzFMRWxkUmIuanBnIiwicmVsZWFzZV9kYXRlIjoiMTkzNS0wNC0wMiIsInRpdGxlIjoiU3Vuc2V0IFJhbmdlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUsInZvdGVfY291bnQiOjJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2FBRkpFcUJOZFRXem1iRGRhSTFmNjV2c0YyRC5qcGciLCJnZW5yZV9pZHMiOlsyOCwzN10sImlkIjo1MjY5MCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3Vuc2V0IFNlcmVuYWRlIiwib3ZlcnZpZXciOiJCYWQgZ3V5cyBwbG90IHRvIHRyaWNrIGEgbmV3bHkgYXJyaXZlZCBFYXN0ZXJuIGdpcmwgb3V0IG9mIGEgcmFuY2ggd2hpY2ggYmVsb25ncyB0byBoZXIgaW5mYW50IHdhcmQuIFJveSwgb2YgY291cnNlLCBzYXZlcyB0aGUgcmFuY2ggZm9yIHRoZSBnaXJsLiBTb25ncyBpbmNsdWRlIFwiSSdtIEhlYWRpbidzIGZvciB0aGUgSG9tZSBDb3JyYWwsXCIgXCJIZSdzIGEgTm8gR29vZCBTb24gb2YgYSBHdW4sXCIgXCJTYW5kbWFuIEx1bGxhYnksXCIgXCJTb25nIG9mIHRoZSBTYW4gSm9hcXVpbixcIiBhbmQgXCJJJ20gYSBDb3dib3kgUm9ja2VmZWxsZXIuXCIiLCJwb3B1bGFyaXR5IjoxLjI0MywicG9zdGVyX3BhdGgiOiIvOWJQWnpOcVdIUkpWWXFmWnpVVFl5aWhvZGdNLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NDItMDktMTQiLCJ0aXRsZSI6IlN1bnNldCBTZXJlbmFkZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LCJ2b3RlX2NvdW50IjoyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9hSDhEZmxCZFN4Vk1HZno1NDdtOEc3Wm94eG0uanBnIiwiZ2VucmVfaWRzIjpbXSwiaWQiOjYwNjgxNiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3VucmlzZS9TdW5zZXQiLCJvdmVydmlldyI6IkFmdGVyIGZhaWxpbmcgaGlzIHVuaXZlcnNpdHkgZW50cmFuY2UgZXhhbXMgZm9yIHRoZSB0aGlyZCB5ZWFyIGluIGEgcm93LCBhIHlvdW5nIEtvcmVhbiBtYW4gdHJhdmVscyB0byBOZXcgWW9yayBDaXR5IHRvIHZpc2l0IGhpcyBsb25nLWRpc3RhbmNlIGdpcmxmcmllbmQuIiwicG9wdWxhcml0eSI6MS40LCJwb3N0ZXJfcGF0aCI6Ii9yZHo5VmpodW4yaTJrMFF3aGtEMGlXdHo3c1AuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNi0xOCIsInRpdGxlIjoiU3VucmlzZS9TdW5zZXQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH1dLCJ0b3RhbF9wYWdlcyI6MTMsInRvdGFsX3Jlc3VsdHMiOjI0M30=
  recorded_at: Fri, 04 Dec 2020 01:02:51 GMT
recorded_with: VCR 6.0.0
